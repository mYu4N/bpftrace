#!/usr/bin/bpftrace

#include <linux/sched.h>
#include <linux/dcache.h>
#include <linux/fs.h>
#include <linux/pid_namespace.h>
#include <linux/nsproxy.h>

/*
 * Trace the reading of specified files
 * # bpftrace file.bt /proc/slabinfo
 * Attaching 3 probes...
 * Trace who is reading this file... Hit Ctrl-C to end.
 * TIME                Username   PID      PPID     PIDNS    COMM             TGID     PCOMM            PATH 
 * 2023-04-11 12:12:48 root       3572793  2521844  4026531836 cat              2521844  bash             /proc/slabinfo
 * 2023-04-11 12:12:48 root       3572793  2521844  4026531836 cat              2521844  bash             /proc/slabinfo
 * 2023-04-11 12:12:52 root       3573233  3573078  4026532676 cat              3573078  sh               /proc/slabinfo
 * 2023-04-11 12:12:52 root       3573233  3573078  4026532676 cat              3573078  sh               /proc/slabinfo
 *
*/

BEGIN
{
        printf("Trace who is reading file ... Hit Ctrl-C to end.\n");
//        printf("%-19s %-10s %-8s %-8s %-16s %-8s %-16s %s\n", "TIME", "Username",  "PID", "PPID", "COMM", "TGID", "PCOMM","PATH");
        printf("%-19s %-10s %-8s %-8s %-8s %-16s", "TIME", "Username", "PID", "PPID", "PIDNS", "COMM");
        printf(" %-8s %-16s %s \n", "TGID", "PCOMM","PATH");
}

tracepoint:syscalls:sys_enter_open,
tracepoint:syscalls:sys_enter_openat
/str(args->filename) == str($1)/
{
    time("%Y-%m-%d %H:%M:%S "); 
    printf("%-10s %-8d %-8d %-8u %-16s ", username, pid, curtask->parent->pid, curtask->nsproxy->pid_ns_for_children->ns.inum, comm);
    $m = curtask->real_parent;
        printf("%-8d %-16s ", $m->tgid, $m->comm);
        $m = $m->parent;
        if ($m == 0 || $m->tgid == 0) {
        }
    printf("%s\n", str(args->filename));
}

kprobe:do_sys_open
/str(arg1) == str($1)/
{
    time("%Y-%m-%d %H:%M:%S "); 
    printf("%-10s %-8d %-8d %-8u %-16s ", username, pid, curtask->parent->pid, curtask->nsproxy->pid_ns_for_children->ns.inum, comm);
    $y = curtask->parent;
        printf("%-8d %-16s ", $y->pid, $y->comm);
        $y = $y->parent;
        if ($y == 0 || $y->pid == 0) {
        }
    printf("%s\n", str(arg1));
}
